# [START kubernetes_deployment]
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  labels:
    app: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      containers:
      - name: plr-server
        image: gcr.io/testplr/server
        imagePullPolicy: Always
        env:
          - name: DATABASE_ENGINE
            value: 'django.db.backends.postgresql'
          - name: DATABASE_HOST
            value: '127.0.0.1'
          - name: DATABASE_NAME
            valueFrom:
              secretKeyRef:
                name: cloudsql
                key: database
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: cloudsql
                key: password
          - name: DATABASE_PORT
            valueFrom:
              configMapKeyRef:
                name: backend--env
                key: DATABASE_PORT
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                name: cloudsql
                key: username
          - name: DEBUG
            valueFrom:
              configMapKeyRef:
                name: backend--env
                key: DEBUG
          - name: DJANGO_ALLOWED_HOSTS
            valueFrom:
              configMapKeyRef:
                name: backend--env
                key: DJANGO_ALLOWED_HOSTS
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: django
                key: secretkey
          - name: SENDGRID_API_KEY
            valueFrom:
              secretKeyRef:
                name: sendgrid
                key: apikey
        ports:
        - containerPort: 8000

      # [START proxy_container]
      - image: gcr.io/cloudsql-docker/gce-proxy:1.16
        name: cloudsql-proxy
        command: ["/cloud_sql_proxy", "--dir=/cloudsql",
                  "-instances=testplr:us-central1:parlevelreset=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        volumeMounts:
          - name: cloudsql-oauth-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
          - name: ssl-certs
            mountPath: /etc/ssl/certs
          - name: cloudsql
            mountPath: /cloudsql
      # [END proxy_container]
      # [START volumes]
      volumes:
        - name: cloudsql-oauth-credentials
          secret:
            secretName: cloudsql-oauth-credentials
        - name: ssl-certs 
          hostPath:
            path: /etc/ssl/certs
        - name: cloudsql
          emptyDir: {}
      # [END volumes]
#  [END kubernetes_deployment]